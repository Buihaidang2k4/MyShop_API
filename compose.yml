version: '3.8'

services:
  backend:
    build:
      context: .
    container_name: myshop-api-backend
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - app-network
    env_file:
      - .env                            
    depends_on:
      mysql:
        condition: service_healthy
      redis-cache:
        condition: service_started
    restart: always

  mysql:
    image: mysql:8.0
    container_name: mysql
    command: --explicit_defaults_for_timestamp=1
    environment:
      MYSQL_ROOT_PASSWORD: ${DBMS_PASSWORD}     
      MYSQL_DATABASE: ${DBMS_NAME}
      MYSQL_USER: shopuser                    
      MYSQL_PASSWORD: shop123                
    ports:
      - "${DBMS_PORT}:${DBMS_PORT}"           
    networks:
      - app-network
    volumes:
      - db_mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${DBMS_USERNAME} -p${DBMS_PASSWORD} | grep 'mysqld is alive'"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 40s
    restart: always

  redis-cache:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "${SPRING_DATA_REDIS_PORT}:${SPRING_DATA_REDIS_PORT}" 
    networks:
      - app-network
    volumes:
      - db_redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: always

volumes:
  db_mysql:
  db_redis:

networks:
  app-network:
    driver: bridge



